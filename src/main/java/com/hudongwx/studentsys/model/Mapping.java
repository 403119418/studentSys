package com.hudongwx.studentsys.model;

import com.hudongwx.studentsys.common.BaseMapping;
import com.hudongwx.studentsys.util.TreeNode;

/**
 * Generated by JFinal.............wuhongxu
 */
@SuppressWarnings("serial")
public class Mapping extends BaseMapping<Mapping> implements TreeNode {
	public static final Mapping dao = new Mapping();

	/*
	* 职能，0：功能，1：视图模块，2：菜单，3：二级菜单，以后多级菜单，依次类推
	* */
	public static final int FUNCTION_DEFAULT = 0;
	public static final int FUNCTION_OPERATE = 0;
	public static final int FUNCTION_VIEW = 1;
	public static final int FUNCTION_MENUITEM = 2;
	public static final int FUNCTION_MENUITEM_CHILD = 3;

	public static final String LABEL_ICON = "icon";
	public static final String LABEL_TITLE = "title";
	public static final String LABEL_URL = "url";
	public static final String LABEL_FUNCTION = "function";
	public static final String LABEL_CHILD_COUNT = "childCount";

	private Mapping parent,leftChild,nextSibling;
	public Mapping(){
		init();
	}
	public Mapping(String icon,String title,String url){
		setIcon(icon);
		setTitle(title);
		setUrl(url);
		init();
	}
	public Mapping(String icon,String title,String url,int function){
		this(icon,title,url);
		setFunction(function);
	}

	public Mapping(Mapping mapping){
		this(mapping.getIcon(),mapping.getTitle(),mapping.getUrl());
	}
	public void init(){
		getParent();
		getLeftChild();
		getNextSibling();
		setChildCount(0);
		setParentId(0);
		setLeftChildId(0);
		setNextSiblingId(0);
	}
	@Override
	public Mapping getParent() {
		return parent;
	}

	@Override
	public void setParent(TreeNode treeNode) {
		parent = (Mapping) treeNode;
	}

	@Override
	public void setLeftChild(TreeNode treeNode) {
		leftChild = (Mapping)treeNode;
	}

	@Override
	public Mapping getLeftChild() {
		return leftChild;
	}

	@Override
	public void setNextSibling(TreeNode treeNode) {
		nextSibling = (Mapping) treeNode;
	}

	@Override
	public Mapping getNextSibling() {
		return nextSibling;
	}

	public boolean equals(Mapping mapping) {
		return mapping.getId().equals(getId()) && mapping.getTitle().equals(getTitle()) && mapping.getUrl().equals(getUrl());
	}

	public boolean isSameSibling(Mapping mapping) {
		return null != mapping && mapping.getDegree().equals(getDegree());
	}
}
